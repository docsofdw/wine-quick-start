---
interface Props {
  wineType: string;
}

const { wineType } = Astro.props as Props;
---
<div class="pairing-widget rounded-lg bg-purple-50 p-6" data-wine={wineType}>
  <h3 class="mb-4 text-xl font-semibold">Was this pairing helpful?</h3>
  <div class="flex flex-wrap gap-4">
    <button
      class="rounded bg-purple-600 px-4 py-2 text-white transition-colors hover:bg-purple-700"
      data-feedback="helpful"
      type="button"
    >
      Yes, very helpful!
    </button>
    <button
      class="rounded bg-gray-300 px-4 py-2 text-gray-800 transition-colors hover:bg-gray-400"
      data-feedback="neutral"
      type="button"
    >
      Somewhat helpful
    </button>
    <button
      class="rounded bg-red-500 px-4 py-2 text-white transition-colors hover:bg-red-600"
      data-feedback="unhelpful"
      type="button"
    >
      Not helpful
    </button>
  </div>

  <script is:inline>
    const widget = document.currentScript?.closest('.pairing-widget');
    if (!widget) return;

    const wine = widget.dataset.wine;
    widget.querySelectorAll('button').forEach((btn) => {
      btn.addEventListener('click', async (e) => {
        const feedback = btn.dataset.feedback;
        console.log('Pairing feedback', { wine, feedback });
        // TODO: POST to Supabase / analytics endpoint
        widget.classList.add('opacity-60', 'pointer-events-none');
        const heading = widget.querySelector('h3');
        if (heading) heading.textContent = 'Thank you for your feedback!';
      });
    });
  </script>
</div> 